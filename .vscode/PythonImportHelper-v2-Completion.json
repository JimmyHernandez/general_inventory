[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "inventario.inventario.asgi",
        "description": "inventario.inventario.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "inventario.inventario.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-%w^qloyq8%*%r2a5l52=i9-&0r@0%@uqat8p4d==xvgwvxl@w2'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-%w^qloyq8%*%r2a5l52=i9-&0r@0%@uqat8p4d==xvgwvxl@w2'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'tabletas',",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'tabletas',\n]\nMIDDLEWARE = [",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'inventario.urls'",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "ROOT_URLCONF = 'inventario.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "WSGI_APPLICATION = 'inventario.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "inventario.inventario.settings",
        "description": "inventario.inventario.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "inventario.inventario.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "inventario.inventario.urls",
        "description": "inventario.inventario.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('inventario/', include('tabletas.urls')),\n]",
        "detail": "inventario.inventario.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "inventario.inventario.wsgi",
        "description": "inventario.inventario.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "inventario.inventario.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventario.tabletas.migrations.0001_initial",
        "description": "inventario.tabletas.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Departamento',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nombre', models.CharField(choices=[('07', '07'), ('30', '30'), ('REC', 'REC'), ('DTOP', 'DTOP'), ('EDUCACION', 'EDUCACION'), ('ORNATO', 'ORNATO'), ('IT', 'IT'), ('ORQUIDEA', 'ORQUIDEA'), ('OFICINA', 'OFICINA')], max_length=100, unique=True)),",
        "detail": "inventario.tabletas.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "TabletasConfig",
        "kind": 6,
        "importPath": "inventario.tabletas.apps",
        "description": "inventario.tabletas.apps",
        "peekOfCode": "class TabletasConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'tabletas'",
        "detail": "inventario.tabletas.apps",
        "documentation": {}
    },
    {
        "label": "FormTableta",
        "kind": 6,
        "importPath": "inventario.tabletas.forms",
        "description": "inventario.tabletas.forms",
        "peekOfCode": "class FormTableta(forms.ModelForm):\n    class Meta:\n        model = Tabletas\n        fields = '__all__'  # or specify specific fields\nclass FormDepartamento(forms.ModelForm):\n    class Meta:\n        model = Departamento\n        fields = '__all__'  # or specify specific fields",
        "detail": "inventario.tabletas.forms",
        "documentation": {}
    },
    {
        "label": "FormDepartamento",
        "kind": 6,
        "importPath": "inventario.tabletas.forms",
        "description": "inventario.tabletas.forms",
        "peekOfCode": "class FormDepartamento(forms.ModelForm):\n    class Meta:\n        model = Departamento\n        fields = '__all__'  # or specify specific fields",
        "detail": "inventario.tabletas.forms",
        "documentation": {}
    },
    {
        "label": "Departamento",
        "kind": 6,
        "importPath": "inventario.tabletas.models",
        "description": "inventario.tabletas.models",
        "peekOfCode": "class Departamento(models.Model):\n    departamento = models.CharField(max_length=100, unique=True, choices=[\n        ('07' , '07'),\n        ('30' , '30'),\n        ('REC' , 'REC'),\n        ('DTOP' , 'DTOP'),\n        ('EDUCACION' , 'EDUCACION'),\n        ('ORNATO' , 'ORNATO'),\n        ('IT' , 'IT'),\n        ('ORQUIDEA' , 'ORQUIDEA'),",
        "detail": "inventario.tabletas.models",
        "documentation": {}
    },
    {
        "label": "Tabletas",
        "kind": 6,
        "importPath": "inventario.tabletas.models",
        "description": "inventario.tabletas.models",
        "peekOfCode": "class Tabletas(models.Model):\n    departamento = models.CharField(max_length=50, choices=[\n        ('07' , '07'),\n        ('30' , '30'),\n        ('REC' , 'REC'),\n        ('DTOP' , 'DTOP'),\n        ('EDUCACION' , 'EDUCACION'),\n        ('ORNATO' , 'ORNATO'),\n        ('IT' , 'IT'),\n        ('ORQUIDEA' , 'ORQUIDEA'),",
        "detail": "inventario.tabletas.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "inventario.tabletas.urls",
        "description": "inventario.tabletas.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.main_menu, name='main_menu'),\n    path('tabletas/', views.search_department, name='search_department'),\n    path('create/', views.create_tablet, name='create_tablet'),\n    path('update/<int:pk>/', views.update_tablet, name='update_tablet'),\n    path('delete/<int:pk>/', views.delete_tablet, name='delete_tablet'),\n]",
        "detail": "inventario.tabletas.urls",
        "documentation": {}
    },
    {
        "label": "main_menu",
        "kind": 2,
        "importPath": "inventario.tabletas.views",
        "description": "inventario.tabletas.views",
        "peekOfCode": "def main_menu(request):\n    return render(request, 'main.html')\n# listas de tabletas ingresadas en base de datos\ndef general_tablet_list(request):\n    objects = Tabletas.objects.all()\n    return render(request, 'lista_general.html', {'objects': objects} )\n# para crear tabletas nuevas\ndef create_tablet(request):\n    if request.method == 'POST':\n        form = FormTableta(request.POST)",
        "detail": "inventario.tabletas.views",
        "documentation": {}
    },
    {
        "label": "general_tablet_list",
        "kind": 2,
        "importPath": "inventario.tabletas.views",
        "description": "inventario.tabletas.views",
        "peekOfCode": "def general_tablet_list(request):\n    objects = Tabletas.objects.all()\n    return render(request, 'lista_general.html', {'objects': objects} )\n# para crear tabletas nuevas\ndef create_tablet(request):\n    if request.method == 'POST':\n        form = FormTableta(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('general_tablet_list')",
        "detail": "inventario.tabletas.views",
        "documentation": {}
    },
    {
        "label": "create_tablet",
        "kind": 2,
        "importPath": "inventario.tabletas.views",
        "description": "inventario.tabletas.views",
        "peekOfCode": "def create_tablet(request):\n    if request.method == 'POST':\n        form = FormTableta(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('general_tablet_list')\n    else:\n        form = FormTableta()\n    return render(request, 'create.html', {'form': form})\n# para hacer un cambio o eliminar la tableta del sistema",
        "detail": "inventario.tabletas.views",
        "documentation": {}
    },
    {
        "label": "update_tablet",
        "kind": 2,
        "importPath": "inventario.tabletas.views",
        "description": "inventario.tabletas.views",
        "peekOfCode": "def update_tablet(request, pk):\n    object = FormTableta.objects.get(pk=pk)\n    if request.method == 'POST':\n        form = FormTableta(request.POST, instance=object)\n        if form.is_valid():\n            form.save()\n            return redirect('general_tablet_list')\n    else:\n        form = FormTableta(instance=object)\n    return render(request, 'update.html', {'form': form})",
        "detail": "inventario.tabletas.views",
        "documentation": {}
    },
    {
        "label": "delete_tablet",
        "kind": 2,
        "importPath": "inventario.tabletas.views",
        "description": "inventario.tabletas.views",
        "peekOfCode": "def delete_tablet(request, pk):\n    object = FormTableta.objects.get(pk=pk)\n    if request.method == 'POST':\n        object.delete()\n        messages.success(request, 'Tableta eliminada exitosamente.')\n        return redirect('lista_general')\n    else:\n        context = {'object': object}\n        return render(request, 'confirm_delete.html', context)\ndef search_department(request):",
        "detail": "inventario.tabletas.views",
        "documentation": {}
    },
    {
        "label": "search_department",
        "kind": 2,
        "importPath": "inventario.tabletas.views",
        "description": "inventario.tabletas.views",
        "peekOfCode": "def search_department(request):\n    if request.method == 'POST':\n        form = FormDepartamento(request.POST)\n        if form.is_valid():\n            departamento_seleccionado = form.cleaned_data['departamento']\n            # Aquí puedes hacer algo con el departamento seleccionado, por ejemplo, filtrar empleados\n            #empleados_filtrados = Empleado.objects.filter(departamento=departamento_seleccionado)\n    else:\n        form = FormDepartamento()\n    return render(request, 'lista_general.html', {'form': form})",
        "detail": "inventario.tabletas.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "inventario.manage",
        "description": "inventario.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'inventario.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "inventario.manage",
        "documentation": {}
    }
]